<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>逃梦红尘</title>
  
  <subtitle>静水流深</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.zhaozg.top/"/>
  <updated>2019-01-10T15:56:54.679Z</updated>
  <id>https://blog.zhaozg.top/</id>
  
  <author>
    <name>逃梦</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从零开始做游戏(二)：我的第一个程序</title>
    <link href="https://blog.zhaozg.top/2019/01/10/1/"/>
    <id>https://blog.zhaozg.top/2019/01/10/1/</id>
    <published>2019-01-09T17:15:12.000Z</published>
    <updated>2019-01-10T15:56:54.679Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="从零开始做游戏-二-：我的第一个程序"><a href="#从零开始做游戏-二-：我的第一个程序" class="headerlink" title="从零开始做游戏(二)：我的第一个程序"></a>从零开始做游戏(二)：我的第一个程序</h3><p>—-逃梦</p><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>&emsp;&emsp;Construct 2是一款HTML5游戏开发引擎，但是在编程界大部分的第一个程序都是“Hello World”的程序，所以，今天，我们也来用Construct 2来编写我们的第一个“Hello World”程序。但是，在开始编写这个程序之前，让我们先来了解一下Construct 2的界面组成，以便于后续我们知道在什么位置选择什么样的控件，进行什么样的操作。</p><h2 id="Construct-2的界面组成"><a href="#Construct-2的界面组成" class="headerlink" title="Construct 2的界面组成"></a>Construct 2的界面组成</h2><p><img src="http://zhaozg.vip/Construct2Sets/C2/Imgs/1547054758550.png" alt="1547054758550"></p><p>&emsp;&emsp;Construct 2主要包含了“菜单栏”、布局窗口、项目窗口、图层窗口、对象窗口和属性窗口。</p><p>&emsp;&emsp;菜单栏：</p><p>&emsp;&emsp;&emsp;&emsp;<img src="http://zhaozg.vip/Construct2Sets/C2/Imgs/1547055069443.png" alt="1547055069443">&emsp;&emsp;该按钮用于预览我们完成的作品。 </p><p>&emsp;&emsp;&emsp;&emsp;<img src="http://zhaozg.vip/Construct2Sets/C2/Imgs/1547055152724.png" alt="1547055152724">&emsp;&emsp;该按钮用于在最终作品不能按照预期运行时，用于调试查找问题。 </p><p>&emsp;&emsp;&emsp;&emsp;<img src="http://zhaozg.vip/Construct2Sets/C2/Imgs/1547055224910.png" alt="1547055224910">&emsp;&emsp;该按钮用于将我们的作品导出为对应的应用。</p><p>&emsp;&emsp;项目窗口：该窗口用于显示我们整个作品中的文件结构及内容。 </p><p>​    对象窗口：该窗口用于显示我们添加到作品中的各个控件，编程时我们称其为对象。 </p><p>&emsp;&emsp;属性窗口：该窗口用于显示我们添加的控件的属性，我们可以通过调整该窗口中的属性值来改变控件的样式，动作等。</p><p>&emsp;&emsp;布局窗口：该窗口是整个作品主要工作的区间。</p><p>&emsp;&emsp;图层窗口：每个布局是可以添加多个图层的，比如我们可以放一个背景图层，在背景图层上放一个游戏图层，这样将不同的控件分别放置，以便于我们后续的修改和调整。 </p><p>&emsp;&emsp;对于以上内容，需要大家记住，在后面的编程过程中，我们将频繁使用它们。</p><p>&emsp;为了让大家容易理解和记忆，我们所有的操作都会尽可能的在上图标注的这几个位置进行，等大家熟练了之后，可以自行去研究其它更快捷、更灵活的操作方式。</p><h3 id="我的Hello-World"><a href="#我的Hello-World" class="headerlink" title="我的Hello World"></a>我的Hello World</h3><p>&emsp;&emsp;接下来，我将通过视频来给大家演示如何编写我们的第一个Hello World程序。视频后我将列出关键操作步骤供大家参考。</p><video src="http://zhaozg.vip/Construct2Sets/C2/Videos/Video.mp4" controls="controls" style="max-width: 100%; display: block; margin-left: auto; margin-right: auto;"><br>your browser does not support the video tag<br></video><p>&emsp;&emsp;在这个示例中，我们主要执行了以下几个步骤：</p><ul><li>新建空白项目</li><li>修改项目名称</li><li>修改项目窗口大小</li><li>修改布局窗口大小</li><li>在布局窗口添加控件 Text</li><li>修改Text属性窗口中的 “text” 属性</li><li>预览程序</li></ul><p>&emsp;&emsp;现在，我们已经在Construct 2中写出了我们的第一个程序，接下来，我们将开始我们的游戏，动画之旅。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://blog.zhaozg.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="Construct 2" scheme="https://blog.zhaozg.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Construct-2/"/>
    
    
      <category term="Construct 2" scheme="https://blog.zhaozg.top/tags/Construct-2/"/>
    
      <category term="游戏开发" scheme="https://blog.zhaozg.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>设计原则之单一职责</title>
    <link href="https://blog.zhaozg.top/2018/12/14/1/"/>
    <id>https://blog.zhaozg.top/2018/12/14/1/</id>
    <published>2018-12-13T16:21:12.000Z</published>
    <updated>2019-01-11T18:23:56.845Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="设计原则之单一职责"><a href="#设计原则之单一职责" class="headerlink" title="设计原则之单一职责"></a>设计原则之单一职责</h3><p>—-逃梦</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>&emsp;&emsp;单一职责原则。</p><p>&emsp;&emsp;英文全称：Simple Responsibility Principle。</p><p>&emsp;&emsp;简称：SRP</p><p>&emsp;&emsp;英文定义：There should never be more than on reason for a class to change.</p><p>&emsp;&emsp;中文解释：不要有多过一个引起类变更的原因。</p><h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><ul><li>降低类、接口、方法的复杂性，明确定义相应职责；</li><li>提高可读性</li><li>提高扩展性</li><li>提高可维护性</li><li>降低变更引起的风险</li></ul><h2 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h2><ul><li>如何定义、划分职责</li></ul><h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><ul><li>在接口上一定要做到单一职责</li><li>在方法上一定要做到单一职责</li><li>在类上尽可能做到单一职责</li></ul><p>&emsp;&emsp;单一职责拆分时考虑：</p><ul><li>属性和行为可以考虑进行拆分；</li><li>行为间考察相互影响；</li><li>一个方法尽可能只做一件事情</li><li>类在拆分时要避免出现强关联情况，比如聚合、组合。</li></ul><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><ul><li><p>属性和行为拆分</p><p>比如我们在系统开发过程中会涉及到用户管理模块。在用户信息中可能会包含如下操作：</p><ul><li>设置用户ID</li><li>获取用户ID</li><li>设置用户名称</li><li>获取用户名称</li><li>设置用户密码</li><li>获取用户密码</li><li>修改用户名称</li><li>修改用户密码</li><li>用户短信验证</li></ul><p>其类图如下：</p><p><img src="http://localhost:8080/Java/DesignPattern/Images/1547226560754.png" alt="1547226560754"></p><p>在这个类图中，用户的属性和行为没有进行拆分，这个是违背单一职责原则的。在项目中依据单一职责重构后的类图为：</p><p><img src="http://localhost:8080/Java/DesignPattern/Images/1547228299351.png" alt="1547228299351"></p></li><li><p>行为间的拆分</p><p>比如为定义了一个操作电脑的接口，包含了开机、关机、打字这样的方法。其类图如下：</p><p><img src="http://localhost:8080/Java/DesignPattern/Images/1547228876793.png" alt="1547228876793"></p></li></ul><p>  但是实际上开机、关机的行为和打字的行为在职责上的变化并不会互相影响。所以这种行为之间是可以使用单一职责原则的。对接口拆分，并分别定义其实现类，再组合成Computer类。其类图如下：</p><p>  <img src="http://localhost:8080/Java/DesignPattern/Images/1547229448879.png" alt="1547229448879"></p><p>  在这样的操作下，是符合单一职责原则的，但是Computer类需要将ComputerControl和ComputerOption组合在一起才能使用，这种情况，增加了类之间的耦合关系，同时增加了类的复杂性，在项目中我们通常调整为如下情况：</p><p>  <img src="http://localhost:8080/Java/DesignPattern/Images/1547229693614.png" alt="1547229693614"></p><ul><li><p>方法间的拆分</p><p>比如如下方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserInfo</span><span class="params">(String username,String password)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.UserName=username;</span><br><span class="line"><span class="keyword">this</span>.Password=password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建议拆分为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String username)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.UserName=username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.Password=password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&emsp;&emsp;单一职责原则是编写程序的标准，使用“职责”和“变更原因”来衡量接口、类、方法的设计是否优良，但是“职责”和“变更原因”又是无法量化的，在不同的项目，不同的环境中，标准也会不同。考虑到在实际项目中会受到项目工期、人员水平、业务需求熟悉度等条件的影响，会出现破坏单一职责的情况，此时，针对不同情况再分别对待吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="设计原则" scheme="https://blog.zhaozg.top/categories/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    
    
      <category term="设计原则" scheme="https://blog.zhaozg.top/tags/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>从零开始做游戏(一)：环境搭建</title>
    <link href="https://blog.zhaozg.top/2018/12/14/1/"/>
    <id>https://blog.zhaozg.top/2018/12/14/1/</id>
    <published>2018-12-13T16:21:12.000Z</published>
    <updated>2018-12-13T18:05:27.933Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="从零开始做游戏-一-：环境搭建"><a href="#从零开始做游戏-一-：环境搭建" class="headerlink" title="从零开始做游戏(一)：环境搭建"></a>从零开始做游戏(一)：环境搭建</h3><p>—-逃梦</p><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>&emsp;&emsp;自2016年以来，为了通过游戏化的方式来提高少儿课程的趣味性，增加孩子的学习兴趣，开始接触游戏编程，并使用Construct 2游戏引擎完成了大量游戏、动画。</p><p>&emsp;&emsp;Construct 2是由Scirra公司开发的一款Html5戏开发引擎。其特点在于入门简单、可快速上手，即使是对编程一无所知的人也可以用它完成游戏作品。利用Construct 2，我们可以开发出各类游戏和动画。</p><p>&emsp;&emsp;虽然Construct 2使用起来比较简单，但其仍然不失为一款很好的编程入门工具，可以很好的锻炼编程思维。在国外的很多大学，Construct 2被选择作为编程入门工具。</p><p>&emsp;&emsp;在此，我将把Construct 2开发相关的内容整理成一个系列，希望为那些有兴趣学习编程，或者有兴趣进行游戏开发的朋友提供一点帮助。</p><p>&emsp;&emsp;该系列适合的读者：</p><ul><li><p>想要了解、学习编程的人</p><p>&emsp;&emsp;无论您之前是否具备编程基础，只要您渴望了解编程的世界，那么您可以从本系列内容中获得您想要的。</p></li><li><p>具备编程经验的人</p><p>&emsp;&emsp;作为一个已经具备了编程能力的人，阅读本系列内容您将会获得一项新的技能，同时，在学习Construct 2的过程中，有可能会对您之前的知识带来其它方面的和巩固和领悟。 </p></li><li><p>家长</p><p>&emsp;&emsp;就目前的形势来看，编程的学习应该从小开始，这里我们不建议强制给孩子添加太多的负担，那么我建议您尝试和孩子一同去体验一下编程的乐趣，本系列的大部分内容我都会以如何编写一款独立小游戏的方式来讲解，它真的是一个有趣的过程。与其给孩子一部手机去玩游戏，不如带着他一起做一款属于你们的游戏，在学习的同时体验一下亲子的乐趣，岂不快哉！也许它还能为您打开孩子的心扉，让您了解他们的想法，听到他们的心声，进入他们的世界，成为你们沟通的一座桥梁。 </p></li><li><p>孩子</p><p>&emsp;&emsp;也许你已经在学习编程的路上，也许你还只是有一个想法不知如何开始，也许你还没有听说过编程，无论如何，在未来的世界里，英语和编程都应该成为你必备的技能。你们应该会有很多新奇的、创新的想法，每一个想法的实现其实都是对一堆问题的解决，编程可以带领你们学会如何去发现问题，如何去拆分问题，如何去简化问题，如何去解决问题。可以的话，静下心来，跟着本系列中的内容，去把里面每个章节的小游戏实现出来，等你学会之后，把你的想法通过程序展示给大家，那将是一件多么炫酷的事情。 </p></li><li><p>其他人</p><p>&emsp;&emsp;如果您有一个想法，但不知道该如何用程序去实现，读完这个系列也许您就知道了。</p><p>&emsp;&emsp;如果您想出来一款不错的产品，您可以尝试用Construct 2做出一套很棒的原型，展示给大家，也许它会成为一款伟大的产品。</p><p>&emsp;&emsp;如果您想出来一款不错的游戏，您可以尝试用Construct 2去实现这个游戏，也许您会成为一名独立游戏开发者。</p><p>&emsp;&emsp;当然，如果您每天只是在无聊的打发时间，也可以学一学Construct 2，说不定能找到让您开始奋(赚)斗(钱)的方向呢。</p></li></ul><h2 id="Construct-2环境准备"><a href="#Construct-2环境准备" class="headerlink" title="Construct 2环境准备"></a>Construct 2环境准备</h2><p>&emsp;&emsp;Construct 2目前包含了免费版、个人版(199.99美元)和企业版(499.99美元)。免费版包含基本功能，可发布Html5游戏，个人版包含所有功能，只限个人使用，不得用于企业组织，用Construct 2开发的游戏收入超过5000美元后，必须购买企业版，企业版包含所有功能，无使用限制。</p><p>&emsp;&emsp;本书中所有案例将在免费版的基础上实现，如需使用个人版或者企业版，请到官<a href="https://www.scirra.com/" target="_blank" rel="noopener">https://www.scirra.com/</a> 进行购买。</p><p>&emsp;&emsp;同时，该工具目前也已经出了Construct 3，可以在网页浏览器直接使用的版本，感兴趣的朋友可以直接登录<a href="https://www.scirra.com/" target="_blank" rel="noopener">https://www.scirra.com/</a>试用。 </p><h3 id="安装条件"><a href="#安装条件" class="headerlink" title="安装条件"></a>安装条件</h3><p>&emsp;&emsp;一台使用Windows操作系统的电脑，一个支持Html5的浏览器，比如Windows系统自带的Internet Explorer11，这里建议使用[Google chrome (谷歌浏览器)][<a href="https://www.google.cn/chrome/]。" target="_blank" rel="noopener">https://www.google.cn/chrome/]。</a> </p><h3 id="Construct-2下载"><a href="#Construct-2下载" class="headerlink" title="Construct 2下载"></a>Construct 2下载</h3><p>&emsp;&emsp;官方下载地址：<a href="https://www.scirra.com/construct2/releases" target="_blank" rel="noopener">https://www.scirra.com/construct2/releases</a> </p><p>&emsp;&emsp;本系列内容使用Construct 2 r259，我已上传至网盘供大家下载。</p><p>&emsp;&emsp;下载地址：<a href="https://pan.baidu.com/s/1-kLOB6ZZeLCAnSlvS8Nwww" target="_blank" rel="noopener">https://pan.baidu.com/s/1-kLOB6ZZeLCAnSlvS8Nwww</a> </p><p>&emsp;&emsp;提取码：jfae</p><h3 id="Construct-2安装"><a href="#Construct-2安装" class="headerlink" title="Construct 2安装"></a>Construct 2安装</h3><p>&emsp;&emsp;下载完成后，在下载的位置找到construct2-r259-setup.exe，双击开始安装。(下面是软件安装步骤，知道如何安装的可以跳过。) </p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719205432.png" alt="1544719205432"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719230896.png" alt="1544719230896"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719243382.png" alt="1544719243382"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719254309.png" alt="1544719254309"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719268515.png" alt="1544719268515"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719278430.png" alt="1544719278430"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719286406.png" alt="1544719286406"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719293974.png" alt="1544719293974"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719305771.png" alt="1544719305771"></p><p>&emsp;&emsp;如出现下面窗口，直接关闭即可。</p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719330467.png" alt="1544719330467"></p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719347848.png" alt="1544719347848"></p><p>&emsp;&emsp;也有可能打开Construct 2后的页面如下图，那是因为开始页被关闭了，也没有关系。 </p><p><img src="http://zhaozg.vip/Construct2Sets/C1/1544719386575.png" alt="1544719386575"></p><p>&emsp;&emsp;现在，我们的编程环境就准备好了。下一节，让我们来了解一下这个工具的各个组成部分，以便于后续我们知道在什么位置寻找什么控件，进行什么操作。并且我们将会编写我们的第一个简单的程序。 </p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="游戏开发" scheme="https://blog.zhaozg.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="Construct 2" scheme="https://blog.zhaozg.top/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Construct-2/"/>
    
    
      <category term="Construct 2" scheme="https://blog.zhaozg.top/tags/Construct-2/"/>
    
      <category term="游戏开发" scheme="https://blog.zhaozg.top/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
